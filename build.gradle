// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.40'
    ext.gradle_version = "3.4.1"
    ext.android_junit5_version = "1.4.2.1"
    ext.gradle_version_plugin_version = "0.21.0"
    ext.ktlin_version = "8.1.0"

    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "de.mannodermaus.gradle.plugins:android-junit5:$android_junit5_version"
        classpath "com.github.ben-manes:gradle-versions-plugin:$gradle_version_plugin_version"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlin_version"
    }
}

apply plugin: "com.github.ben-manes.versions"
apply plugin: "org.jlleitschuh.gradle.ktlint"

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "http://dl.bintray.com/salomonbrys/kodein" }
        maven { url 'https://jitpack.io' }
    }

    project.ext {
        def versionMajor = 0
        def versionMinor = 3
        def versionPatch = 3
        version_name = "${versionMajor}.${versionMinor}.${versionPatch}"
        version_code = 1
        test_inst_runner = "androidx.test.runner.AndroidJUnitRunner"

        //Android
        support_version = "28.0.0"
        buildTools_version = "28.0.3"
        min_sdk_version = 21
        target_sdk_version = 28
        compile_sdk_version = 28
    }
}

apply from: 'buildsystem/dependencies.gradle'

task clean(type: Delete) {
    delete rootProject.buildDir
}

dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
